##############################################################################
# maali cygnet file for TASSEL
##############################################################################

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="binary"

# URL to download the source code from
MAALI_URL="http://sourceforge.net/projects/${MAALI_TOOL_NAME}/files/Tassel%20${MAALI_TOOL_VERSION}/2013-04-25/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}-src-20130425.zip/download"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}-src-20130425.zip"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/tassel3-src"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="bio-apps"

# tool pre-requisites
MAALI_TOOL_PREREQ="java/7u65"

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
MAALI_TOOL_BUILD_PREREQ="ant/1.9.6"

# for auto-building module files
MAALI_MODULE_SET_PATH=1

# allow us to exclude files when unzipping
MAALI_UNZIP_EXCLUDE="'*__MACOSX*' '*.DS_Store*' '*.svn*'"

##############################################################################

function maali_build {
  cd $MAALI_TOOL_BUILD_DIR

  maali_makedir "$MAALI_INSTALL_DIR/jar"
  maali_makedir "$MAALI_INSTALL_DIR/bin"

  maali_run "ant"

  for exe in run_gbs_pipeline.pl run_pipeline.pl start_tassel.pl
  do
    maali_run "install -m 755 $exe $MAALI_INSTALL_DIR/bin"
    sed -i -e "s!\$top/lib!$MAALI_INSTALL_DIR/jar!g" "$MAALI_INSTALL_DIR/bin/$exe"
  done

  cd lib
  for jar in *.jar
  do
    maali_run "install -m 644 $jar $MAALI_INSTALL_DIR/jar"
  done

  cd ..
  maali_run "install -m 644 dist/sTASSEL.jar $MAALI_INSTALL_DIR/jar"

}

##############################################################################
