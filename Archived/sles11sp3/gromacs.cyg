##############################################################################
# maali cygnet file for gromacs (autoconf versions prior to 4.6)
##############################################################################

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_GCC_COMPILERS"

# URL to download the source code from
MAALI_URL="ftp://ftp.gromacs.org/pub/gromacs/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="apps"

MAALI_TOOL_PREREQ="fftw $MAALI_DEFAULT_MPI lapack cuda"
MAALI_TOOL_BUILD_PREREQ="cmake"

if [ $MAALI_TOOL_MAJOR_VERSION == 4 ]; then
  MAALI_MODULE_SET_LD_LIBRARY_PATH=1
elif [ $MAALI_TOOL_MAJOR_VERSION == 5 ]; then
  MAALI_MODULE_SET_LD_LIBRARY_PATH='lib64'
fi

MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_MANPATH=1
MAALI_MODULE_WHATIS='GROMACS is a versatile package to perform molecular dynamics, i.e. simulate the Newtonian equations of motion for systems with hundreds to millions of particles.'

MAALI_TOOL_CONFIGURE='-DGMX_FFT_LIBRARY=fftw3 -DGMX_EXTERNAL_BLAS=blas -DGMX_EXTERNAL_LAPACK=lapack -DCMAKE_SKIP_RPATH=ON --host=x86_64 -DCMAKE_C_SIZEOF_DATA_PTR=8 -DGMX_USE_RDTSCP=OFF -DGMX_CPU_ACCELERATION=AVX_256 ..'

# for tools that use cmake
function maali_cmake_build {

if [ $MAALI_TOOL_VERSION == 4.6.7 ]; then

    # allows late evaluation
    MAALI_TOOL_CONFIGURE_EVAL=`eval echo "$MAALI_TOOL_CONFIGURE"`
    
    ################################################ single thread-mpi cpu ####################################
    cd "$MAALI_TOOL_BUILD_DIR"
    # cmake likes to build in a directory of it's own
    maali_makedir "$MAALI_TOOL_NAME-build"
    cd "$MAALI_TOOL_NAME-build"
    
    maali_run "cmake -DGMX_GPU=OFF -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH"
    maali_run "make"
    maali_run "make install"
    
    ################################################ double thread-mpi cpu ####################################
    cd "$MAALI_TOOL_BUILD_DIR"
    maali_makedir "$MAALI_TOOL_NAME-build-double"
    cd "$MAALI_TOOL_NAME-build-double"
    
    # GMX_GPU=OFF to force cuda detecting off 
    maali_run "cmake -DGMX_GPU=OFF -DGMX_DOUBLE=ON -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH"
    maali_run "make clean"
    # only compile mdrun
    maali_run "make mdrun"
    maali_run "make install-mdrun"
    
    ################################################ single mpi cpu ####################################
    cd "$MAALI_TOOL_BUILD_DIR"
    maali_makedir "$MAALI_TOOL_NAME-build-mpi"
    cd "$MAALI_TOOL_NAME-build-mpi"
    
    maali_run "cmake -DGMX_GPU=OFF -DGMX_MPI=ON -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH "
    maali_run "make clean"
    maali_run "make mdrun"
    maali_run "make install-mdrun"
    
    ################################################ double mpi cpu ####################################
    cd "$MAALI_TOOL_BUILD_DIR"
    maali_makedir "$MAALI_TOOL_NAME-build-mpi-double"
    cd "$MAALI_TOOL_NAME-build-mpi-double"
    
    maali_run "cmake -DGMX_GPU=OFF -DGMX_MPI=ON -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DGMX_DOUBLE=ON -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH "
    maali_run "make clean"
    maali_run "make mdrun"
    maali_run "make install-mdrun"
    
    ################################################ single mpi cuda ####################################
    cd "$MAALI_TOOL_BUILD_DIR"
    maali_makedir "$MAALI_TOOL_NAME-build-mpi-cuda"
    cd "$MAALI_TOOL_NAME-build-mpi-cuda"
    
    maali_run "cmake -DGMX_MPI=ON -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DGMX_GPU=ON -DGMX_DEFAULT_SUFFIX=OFF -DGMX_BINARY_SUFFIX=_cuda -DGMX_LIBS_SUFFIX=_cuda -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH "
    maali_run "make clean"
    maali_run "make mdrun"
    maali_run "make install-mdrun"
    
    ################################################ mpi cuda double ####################################
    #  GPU acceleration is not available in double precision

elif [ $MAALI_TOOL_VERSION == 5.0.2 ]; then

    # allows late evaluation
    MAALI_TOOL_CONFIGURE_EVAL=`eval echo "$MAALI_TOOL_CONFIGURE"`
    
    ################################################ single thread-mpi cpu ####################################
    cd "$MAALI_TOOL_BUILD_DIR"
    # cmake likes to build in a directory of it's own
    maali_makedir "$MAALI_TOOL_NAME-build"
    cd "$MAALI_TOOL_NAME-build"
    
    maali_run "cmake -DGMX_GPU=OFF -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH"
    maali_run "make"
    maali_run "make install"
    
    ################################################ double thread-mpi cpu ####################################
    cd "$MAALI_TOOL_BUILD_DIR"
    maali_makedir "$MAALI_TOOL_NAME-build-double"
    cd "$MAALI_TOOL_NAME-build-double"
    
    # GMX_GPU=OFF to force cuda detecting off; -DGMX_BUILD_MDRUN_ONLY=ON to build mdrun only (different from in version 4.6.7) 
    maali_run "cmake -DGMX_BUILD_MDRUN_ONLY=ON -DGMX_GPU=OFF -DGMX_DOUBLE=ON -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH"
    maali_run "make clean"
    maali_run "make "
    maali_run "make install"
    
    ################################################ single mpi cpu ####################################
    cd "$MAALI_TOOL_BUILD_DIR"
    maali_makedir "$MAALI_TOOL_NAME-build-mpi"
    cd "$MAALI_TOOL_NAME-build-mpi"
    
    maali_run "cmake -DGMX_BUILD_MDRUN_ONLY=ON -DGMX_GPU=OFF -DGMX_MPI=ON -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH "
    maali_run "make clean"
    maali_run "make "
    maali_run "make install"
    
    ################################################ double mpi cpu ####################################
    cd "$MAALI_TOOL_BUILD_DIR"
    maali_makedir "$MAALI_TOOL_NAME-build-mpi-double"
    cd "$MAALI_TOOL_NAME-build-mpi-double"
    
    maali_run "cmake -DGMX_BUILD_MDRUN_ONLY=ON -DGMX_GPU=OFF -DGMX_MPI=ON -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DGMX_DOUBLE=ON -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH "
    maali_run "make clean"
    maali_run "make "
    maali_run "make install"
    
    ################################################ single mpi cuda ####################################
    cd "$MAALI_TOOL_BUILD_DIR"
    maali_makedir "$MAALI_TOOL_NAME-build-mpi-cuda"
    cd "$MAALI_TOOL_NAME-build-mpi-cuda"
    
    maali_run "cmake -DGMX_BUILD_MDRUN_ONLY=ON -DGMX_MPI=ON -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DGMX_GPU=ON -DGMX_DEFAULT_SUFFIX=OFF -DGMX_BINARY_SUFFIX=_cuda -DGMX_LIBS_SUFFIX=_cuda -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH "
    maali_run "make clean"
    maali_run "make "
    maali_run "make install"
    
    ################################################ mpi cuda double ####################################
    #  GPU acceleration is not available in double precision
 
fi

}
