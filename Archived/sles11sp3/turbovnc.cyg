##############################################################################
# maali cygnet file for TurboVNC
##############################################################################

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_SYSTEM_GCC"

# URL to download the source code from
MAALI_URL="http://sourceforge.net/projects/$MAALI_TOOL_NAME/files/$MAALI_TOOL_VERSION/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz/download"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME_ORIG-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="tools"

# tool pre-requisites
MAALI_TOOL_PREREQ="libjpeg-turbo/1.4.0"

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
MAALI_TOOL_BUILD_PREREQ="cmake/2.8.12"

# add additional configure options
MAALI_TOOL_CONFIGURE='-DTJPEG_INCLUDE_DIR=$MAALI_LIBJPEGTURBO_HOME/include -DTJPEG_LIBRARY=$MAALI_LIBJPEGTURBO_HOME/lib/libturbojpeg.a'

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_MANPATH='man'

##############################################################################

function maali_cmake_build {

  # allows late evaluation
  MAALI_TOOL_CONFIGURE_EVAL=`eval echo "$MAALI_TOOL_CONFIGURE"`

  # cmake likes to build in a director of it's own
  maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build"
  cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build"

  maali_run "cmake -G \"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH"
  if [ $DEBUG ]; then
    maali_run "make VERBOSE=TRUE"
  else
    maali_run "make"
  fi
  maali_run "make install"
}

##############################################################################
