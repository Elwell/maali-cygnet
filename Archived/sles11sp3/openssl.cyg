##############################################################################
# maali cygnet file for openssl
##############################################################################

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_GCC_COMPILERS"

# URL to download the source code from
MAALI_URL="http://www.openssl.org/source/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# tool pre-requisites
#MAALI_TOOL_PREREQ="glib/${MAALI_TOOL_VERSION}"

# add additional configure options
MAALI_TOOL_CONFIGURE=" "

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_CPATH=1
MAALI_MODULE_SET_MANPATH=1
MAALI_MODULE_SET_PKG_CONFIG_PATH=1

##############################################################################

function maali_build {
 
  module list
  sleep 30

  cd "$MAALI_TOOL_BUILD_DIR"
  maali_run "./config --prefix=$MAALI_INSTALL_DIR --openssldir=${MAALI_INSTALL_DIR}/etc/ssl --libdir=lib shared"
  maali_run "make -j $MAALI_CORES"
  maali_run "make install"  
  cd "$MAALI_INSTALL_DIR"/lib
  ln -s libssl.so.1.0.0 libssl.so.10
  ln -s libcrypto.so.1.0.0 libcrypto.so.10
}

##############################################################################
