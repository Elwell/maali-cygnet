##############################################################################
# maali cygnet file for mumax
##############################################################################

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_GCC_COMPILERS"

# specify which cuda versions we want to build the tool with
MAALI_TOOL_CUDA_COMPILERS="$MAALI_DEFAULT_CUDA_COMPILERS"

# URL to download the source code from
MAALI_URL="https://github.com/$MAALI_TOOL_NAME/$MAALI_TOOL_MAJOR_VERSION/archive/v$MAALI_TOOL_VERSION.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}"

# tool pre-requisites
MAALI_TOOL_PREREQ="go/1.4.2"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="apps"

# for auto-building module files
MAALI_MODULE_SET_PATH=1

# supports building CUDA version
MAALI_CUDA_SUPPORT=1

##############################################################################

function maali_build {
  if [ $MAALI_CUDA_BUILD -eq 1 ]; then
    cd $MAALI_BUILD_DIR
    rm -rf $MAALI_TOOL_BUILD_DIR
    mkdir -p $MAALI_TOOL_BUILD_DIR
    cd $MAALI_TOOL_BUILD_DIR
    export GOPATH=$MAALI_TOOL_BUILD_DIR
    go get -u -v github.com/mumax/3/...
    cp -r $MAALI_TOOL_BUILD_DIR/bin $MAALI_INSTALL_DIR/ 
    cp -r $MAALI_TOOL_BUILD_DIR/pkg $MAALI_INSTALL_DIR/ 
  else
    echo "mumax requires CUDA"
    exit 1
  fi
}

##############################################################################
