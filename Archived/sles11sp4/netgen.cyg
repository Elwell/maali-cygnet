##############################################################################
# maali cygnet file for netgen
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

NETGEN is an automatic 3d tetrahedral mesh generator. It accepts input from
constructive solid geometry (CSG) or boundary representation (BRep) from STL
file format. The connection to a geometry kernel allows the handling of IGES
and STEP files. NETGEN contains modules for mesh optimization and hierarchical
mesh refinement. Netgen is open source based on the LGPL license. It is
available for Unix/Linux and Windows.

For further information see www.ngsolve.org

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
MAALI_URL="http://sourceforge.net/projects/netgen-mesher/files/netgen-mesher/$MAALI_TOOL_MAJOR_MINOR_VERSION/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz/download"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="apps"

# tool pre-requisites modules needed to install this new tool/package
MAALI_TOOL_PREREQ="togl/1.7"

# add additional configure options
MAALI_TOOL_CONFIGURE=""

# used in the wiki navigation bar - defaults to MAALI_TOOL_NAME_ORIG
MAALI_WIKI_TOOL_NAME="NETGEN"

# for adding [[Category:Python]] to wiki page - bio-apps, devel and python automatically generate a category
# MAALI_WIKI_CATEGORY=""

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_MANPATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_CPATH=1
MAALI_MODULE_SET_FPATH=1
MAALI_MODULE_SET_FCPATH=1
MAALI_MODULE_SET_NETGENDIR='$MAALI_APP_HOME/bin'

##############################################################################

function maali_build {

  export LDFLAGS="-L$MAALI_TOGL_HOME/lib"
  cd "$MAALI_TOOL_BUILD_DIR"

  maali_run "./configure --prefix=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE"
  maali_run "make"
  maali_run "make install"
}

##############################################################################
