##############################################################################
# maali cygnet file for Armadillo
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

Armadillo is a high quality linear algebra library (matrix maths) for the C++
language, aiming towards a good balance between speed and ease of use.

For further information see http://arma.sourceforge.net/

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
MAALI_URL="http://sourceforge.net/projects/arma/files/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz/download"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# tool pre-requisites
MAALI_TOOL_PREREQ="intel-mkl/11.2.4"

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
MAALI_TOOL_BUILD_PREREQ="cmake/2.8.12.2"

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_MANPATH=1

##############################################################################

function maali_cmake_build {
  # for tools that use cmake

  # allows late evaluation
  MAALI_TOOL_CONFIGURE_EVAL=`eval echo "$MAALI_TOOL_CONFIGURE"`

  cd "$MAALI_TOOL_BUILD_DIR"

  sed -i -e 's:^// #define ARMA_USE_LAPACK$:#define ARMA_USE_LAPACK:g' include/armadillo_bits/config.hpp
  sed -i -e 's:^// #define ARMA_USE_BLAS$:#define ARMA_USE_BLAS:g' include/armadillo_bits/config.hpp
  sed -i -e 's:^// #define ARMA_USE_MKL_ALLOC$:#define ARMA_USE_MKL_ALLOC:g' include/armadillo_bits/config.hpp
  sed -i -e 's:/opt/intel/mkl/lib/intel64:'$MKLROOT'/lib/intel64:g' build_aux/cmake/Modules/ARMA_FindMKL.cmake

  # cmake likes to build in a director of it's own
  maali_makedir "$MAALI_TOOL_NAME-build"
  cd "$MAALI_TOOL_NAME-build"

  maali_run "cmake -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH"
  if [ $DEBUG ]; then
    maali_run "make VERBOSE=TRUE"
  else
    maali_run "make"
  fi
  maali_run "make install"
}

##############################################################################
