##############################################################################
# maali cygnet file for NAMD
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

NAMD, recipient of a 2002 Gordon Bell Award and a 2012 Sidney Fernbach Award,
is a parallel molecular dynamics code designed for high-performance simulation
of large biomolecular systems. Based on Charm++ parallel objects, NAMD scales
to hundreds of cores for typical simulations and beyond 500,000 cores for the
largest simulations. NAMD uses the popular molecular graphics program VMD for
simulation setup and trajectory analysis, but is also file-compatible with
AMBER, CHARMM, and X-PLOR. NAMD is distributed free of charge with source code.

For further information see http://www.ks.uiuc.edu/Research/namd/

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_INTEL_COMPILERS"

# specify which cuda versions we want to build the tool with
MAALI_TOOL_CUDA_COMPILERS="$MAALI_DEFAULT_CUDA_COMPILERS"

# URL to download the source code from
MAALI_URL=""

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/NAMD_${MAALI_TOOL_VERSION}_Source.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/NAMD_""$MAALI_TOOL_VERSION""_Source"

MAALI_TOOL_PREREQ="$MAALI_DEFAULT_MPI fftw"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="apps"

# for auto-building module files
MAALI_MODULE_SET_PATH=1

# supports building CUDA version
MAALI_CUDA_SUPPORT=1

##############################################################################

function maali_build {

  cd "$MAALI_TOOL_BUILD_DIR"

  maali_run 'tar xf charm-6.6.1.tar'
  cd charm-6.6.1

  maali_run './build charm++ multicore-linux64 icc -O -DCMK_OPTIMIZE=1'
 
  echo "Charm built"
 
  cd "$MAALI_TOOL_BUILD_DIR"
 
  if [ $MAALI_CUDA_BUILD -eq 1 ]; then
    maali_run './config Linux-x86_64-icc --charm-arch multicore-linux64-icc --with-fftw3 --with-tcl --fftw-prefix $FFTW_HOME --with-cuda --cuda-prefix $NVIDIA_CUDA_HOME'
  else
    maali_run './config Linux-x86_64-icc --charm-arch multicore-linux64-icc --with-fftw3 --with-tcl --fftw-prefix $FFTW_HOME'
  fi

  cd Linux-x86_64-icc
  maali_run 'make'

  cd "$MAALI_TOOL_BUILD_DIR"
  ln -s Linux-x86_64-icc bin
  
  maali_run 'mkdir -p $MAALI_INSTALL_DIR'
  maali_run 'cp -R $MAALI_TOOL_BUILD_DIR/* $MAALI_INSTALL_DIR'

}

##############################################################################
