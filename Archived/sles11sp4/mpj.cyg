##############################################################################
# maali cygnet file for mpj
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

MPJ Express is an implementation of an MPI-like API-standardized by the Java
Grande forum-used to write parallel Java applications, which can execute on a
variety of parallel platforms ranging from multicore processors to compute
clusters/clouds.

For further information see http://mpj-express.org/

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_GCC_COMPILERS"

# URL to download the source code from
MAALI_URL="https://sourceforge.net/projects/mpjexpress/files/releases/${MAALI_TOOL_NAME}-v${MAALI_TOOL_VERSION}.zip/download"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME_ORIG-$MAALI_TOOL_VERSION.zip"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/mpj-v${MAALI_TOOL_VERSION}"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="tools"

# tool pre-requisites modules needed to install this new tool/package
MAALI_TOOL_PREREQ="cmake mpt java ant"

# packages that need to be installed in the operating system for this build to work
#MAALI_SYSTEM_PACKAGES_PREREQ='java ant'

# add additional configure options
MAALI_TOOL_CONFIGURE=""

# for auto-building module files

MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_MPJ_HOME='$MAALI_APP_HOME'

##############################################################################

function maali_build {

	# You next export the paths before you build it (Chicken and egg for building libs)
	export PATH=$PATH:$MAALI_TOOL_BUILD_DIR/bin
	export MPJ_HOME=$MAALI_TOOL_BUILD_DIR
	export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MAALI_TOOL_BUILD_DIR/lib

	cd "$MAALI_TOOL_BUILD_DIR"
	maali_run "ant"
	cd "$MAALI_TOOL_BUILD_DIR/src/mpjdev/natmpjdev/lib"
	mkdir build
	cd build
	maali_run "cmake .. -DCMAKE_INSTALL_PREFIX=${MAALI_INSTALL_DIR}"
	maali_run "make install"

	mkdir -p ${MAALI_INSTALL_DIR}
	cp -R ${MAALI_TOOL_BUILD_DIR}/* ${MAALI_INSTALL_DIR}

}

##############################################################################

