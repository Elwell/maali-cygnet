##############################################################################
# maali cygnet file for netcdf4-python 
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

The Multiphysics Object-Oriented Simulation Environment (MOOSE) is a finite-element, 
multiphysics framework primarily developed by Idaho National Laboratory. 
It provides a high-level interface to some of the most sophisticated nonlinear 
solver technology on the planet. MOOSE presents a straightforward API that aligns 
well with the real-world problems scientists and engineers need to tackle. 

Every detail about how an engineer interacts with MOOSE has been thought through, 
from the installation process through running your simulation on state of the art 
supercomputers, the MOOSE system will accelerate your research.

For further information see http://mooseframework.org

EOF

# specify which PrgEnv we want to build the tool with
MAALI_TOOL_CRAY_PRGENV="$MAALI_DEFAULT_CRAY_INTEL_PRGENV $MAALI_DEFAULT_CRAY_GCC_PRGENV"

# specify which cpus to target
MAALI_TOOL_CRAY_CPU_TARGET="$MAALI_DEFAULT_CRAY_PES"

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from 
MAALI_URL="https://github.com/idaholab/moose.git"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME" 

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="apps"

# tool pre-requisites modules needed to install this new tool/package
MAALI_TOOL_PREREQ="cray-mpich/7.7.0 cray-petsc/3.7.6.2 cray-tpsl/17.11.1" 

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
MAALI_TOOL_BUILD_PREREQ=""

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_MOOSE_DIR='$MAALI_APP_HOME'

##############################################################################
function maali_download {
  log ".. supressing downloading as we are using a git repository"
}

function maali_unpack {
  log ".. supressing unpacking as we are using a git repository"
}

function maali_build {

  export GIT_SSL_NO_VERIFY=1
  git clone $MAALI_URL ${MAALI_INSTALL_DIR}
  cd ${MAALI_INSTALL_DIR}
  git checkout master

  export CC=cc CXX=CC FC=ftn F77=ftn F90=ftn

  cd scripts
  maali_run "./update_and_rebuild_libmesh.sh"
  cd ../framework
  maali_run "make -j 8"
  cd ../modules 
  maali_run "make -j 8"

}

##############################################################################
