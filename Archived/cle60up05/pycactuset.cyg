##############################################################################
# maali cygnet file for pycactuset
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

The pycactuset package contains several Python utilities for accessing different
data formats generated from simulations using the Einstein Toolkit.

For further information see https://bitbucket.org/DrWhat/pycactuset

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="python/2.7.14"

MAALI_TOOL_CRAY_CPU_TARGET="haswell"

# URL to download the source code from
MAALI_URL="http://bitbucket.org/DrWhat/pycactuset"

# location we are downloading the source code to
MAALI_DST=

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="python"

# tool pre-requisites
MAALI_TOOL_PREREQ="PrgEnv-intel numpy scipy h5py matplotlib"

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
MAALI_TOOL_BUILD_PREREQ="mercurial"

# for auto-building modulefiles
MAALI_MODULE_SET_PATH

##############################################################################

function maali_download {
  echo ".. supressing download as we are using a git repository"
  }

##############################################################################

function maali_unpack {
  echo ".. supressing unpacking as we are using a git repository"
  maali_run "mkdir -p $MAALI_TOOL_BUILD_DIR"
}
##############################################################################

function maali_python_build {
  cd "$MAALI_TOOL_BUILD_DIR"

  maali_run "hg clone $MAALI_URL"

  cd $MAALI_TOOL_NAME/PostCactus
  maali_run "python setup.py install --prefix=$MAALI_INSTALL_DIR"

  cd ../SimRep
  maali_run "python setup.py install --prefix=$MAALI_INSTALL_DIR"

  cd ../SimVideo
  maali_run "python setup.py install --prefix=$MAALI_INSTALL_DIR"
}
