##############################################################################
# maali cygnet file for SciPy
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

SciPy (pronounced Sigh Pie) is a Python-based ecosystem of open-source software
for mathematics, science, and engineering.

For further information see https://www.scipy.org/

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_PYTHON"

# URL to download the source code from
MAALI_URL="http://pypi.python.org/packages/source/$MAALI_PYTHON_FIRSTLETTER/$MAALI_TOOL_NAME_ORIG/$MAALI_TOOL_NAME_ORIG-$MAALI_TOOL_VERSION.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME_ORIG-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME_ORIG-$MAALI_TOOL_VERSION"

# tool pre-requisites
MAALI_TOOL_PREREQ="PrgEnv-gnu/5.2.82 gcc/4.8.2 numpy/1.10.1"

##############################################################################

function maali_python_build {

  # change to build directory
  cd $MAALI_TOOL_BUILD_DIR

  # You need the cray-gnu env
  export XTPE_LINK_TYPE=dynamic

  GCC_MAJOR_MINOR=`gcc -dumpversion | tr -d '.' | cut -c 1-2`
  LIBSCI_DIR=${CRAY_LIBSCI_BASE_DIR}/gnu/${GCC_MAJOR_MINOR}/${CRAY_CPU_TARGET}

  if [ ! -d ${LIBSCI_DIR} ]; then
    echo "libsci library not found in ${LIBSCI_DIR}"
    exit 1
  fi

  export BLAS="$CRAY_LIBSCI_BASE_DIR/GNU/$GCC_MAJOR_MINOR/x86_64/lib/libsci_gnu.a"
  export LAPACK="$CRAY_LIBSCI_BASE_DIR/GNU/$GCC_MAJOR_MINOR/x86_64/lib/libsci_gnu.a"
  export ATLAS"=$CRAY_LIBSCI_BASE_DIR/GNU/$GCC_MAJOR_MINOR/x86_64/lib/libsci_gnu.a"

  export F77FLAGS=-ff2c

  maali_run "python setup.py build --compiler=unix --fcompiler=gnu95"
  maali_run "python setup.py install --prefix=$MAALI_INSTALL_DIR"
}

##############################################################################
