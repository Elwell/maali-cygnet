##############################################################################
# maali cygnet file for gapfiller
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

GapFiller is a seed-and-extend local assembler to fill the gap within paired
reads.  It can be used for both DNA and RNA and it has been tested on Illumina
data.  GapFiller can be used whenever a sequence is to be assembled starting
from reads lying on its ends, provided a loose estimate of sequence length.

For further information see https://sourceforge.net/projects/gapfiller/

EOF

# specify which PrgEnv we want to build the tool with
MAALI_TOOL_CRAY_PRGENV="$MAALI_DEFAULT_CRAY_GCC_PRGENV $MAALI_DEFAULT_CRAY_INTEL_PRGENV"

# specify which cpus to target
MAALI_TOOL_CRAY_CPU_TARGET="$MAALI_DEFAULT_CRAY_PES"

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
MAALI_URL="http://sourceforge.net/projects/${MAALI_TOOL_NAME}/files/v${MAALI_TOOL_VERSION}/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}.tar.gz/download"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# tool pre-requisites
MAALI_TOOL_PREREQ="boost/1.49.0"

# add additional configure options
MAALI_TOOL_CONFIGURE='LDFLAGS=-L$BOOST_ROOT/lib LIBS=-lstdc++'

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="bio-apps"

# for auto-building module files
MAALI_MODULE_SET_PATH=1

##############################################################################
