##############################################################################
# maali cygnet file for openpa
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

Welcome to the homepage for the OpenPA project. The goal of this project is to
provide an open source, highly-portable library that provides atomic primitives
(and related constructs) for high performance, concurrent software.

For further information see https://trac.mpich.org/projects/openpa/wiki

EOF

# specify which PrgEnv we want to build the tool with
MAALI_TOOL_CRAY_PRGENV="$MAALI_DEFAULT_CRAY_PRGENVS"

# specify which cpus to target
MAALI_TOOL_CRAY_CPU_TARGET="$MAALI_DEFAULT_CRAY_PES"

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
MAALI_URL="https://trac.mpich.org/projects/openpa/raw-attachment/wiki/Downloads/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# add additional configure options
MAALI_TOOL_CONFIGURE='--with-atomic-primitives=no'

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_INCLUDE_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_CPATH=1
MAALI_MODULE_SET_MANPATH=1
MAALI_MODULE_SET_PKG_CONFIG_PATH=1

##############################################################################
