##############################################################################
# maali cygnet file for GMT
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

GMT is an open source collection of ~65 tools for manipulating geographic and
Cartesian data sets (including filtering, trend fitting, gridding, projecting,
etc.) and producing Encapsulated PostScript File (EPS) illustrations ranging
from simple x-y plots via contour maps to artificially illuminated surfaces and
3-D perspective views; the GMT supplements add another ~70 more specialized
tools. GMT supports over 30 map projections and transformations and comes with
support data such as GSHHG coastlines, rivers, and political boundaries. GMT is
developed and maintained by Paul Wessel and Walter H. F. Smith with help from a
global set of volunteers, and is supported by the National Science Foundation.
It is released under the GNU General Public License.

For further information see https://www.soest.hawaii.edu/gmt/

EOF

# specify which PrgEnv we want to build the tool with
MAALI_TOOL_CRAY_PRGENV="$MAALI_DEFAULT_CRAY_GCC_PRGENV"

# specify which cpus to target
MAALI_TOOL_CRAY_CPU_TARGET="$MAALI_DEFAULT_CRAY_PES"

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
MAALI_URL="http://gmt.soest.hawaii.edu/files/download?name=${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}-src.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}-src.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# tool pre-requisites
MAALI_TOOL_PREREQ="cray-netcdf/4.3.2 fftw/3.3.4.0 gdal/1.11.3"

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
MAALI_TOOL_BUILD_PREREQ="cmake"

# add additional configure options
MAALI_TOOL_CONFIGURE='-DFFTW3_INCLUDE_DIR=$FFTW_INC -DFFTW3F_LIBRARY=$FFTW_DIR -DCMAKE_EXE_LINKER_FLAGS=\"-dynamic\"'

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_MANPATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH='lib64'

##############################################################################
#function maali_cmake_build{
#  	maali_run "cd $MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build"
#	maali_run "cmake ${MAALI_TOOL_CONFIGURE} -DCMAKE_INTALL_PREFIX=${MAALI_INSTALL_DIR} -DCMAKE_EXE_LINKER_FLAGS=\"-dynamic\" $MAALI_CMAKE_PATH" 
#	maali_run "make -j 8 VERBOSE=1"
#	maali_run "make -j 8 intall"
#}

