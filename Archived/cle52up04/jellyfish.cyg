##############################################################################
# maali cygnet file for Jellyfish
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

Jellyfish is a tool for fast, memory-efficient counting of k-mers in DNA. A
k-mer is a substring of length k, and counting the occurrences of all such
substrings is a central step in many analyses of DNA sequence. JELLYFISH can
count k-mers quickly by using an efficient encoding of a hash table and by
exploiting the compare-and-swap CPU instruction to increase parallelism.

For further information see http://www.genome.umd.edu/jellyfish.html

EOF

# specify which PrgEnv we want to build the tool with
MAALI_TOOL_CRAY_PRGENV="$MAALI_DEFAULT_CRAY_GCC_PRGENV"

# specify which cpus to target
MAALI_TOOL_CRAY_CPU_TARGET="$MAALI_DEFAULT_CRAY_PES"

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
if [ $MAALI_TOOL_MAJOR_VERSION -gt 1 ]; then
  MAALI_URL="ftp://ftp.genome.umd.edu/pub/${MAALI_TOOL_NAME}/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}.tar.gz"
else
  MAALI_URL="http://www.cbcb.umd.edu/software/${MAALI_TOOL_NAME}/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}.tar.gz"
fi

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="bio-apps"

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_MANPATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_PKG_CONFIG_PATH=1

##############################################################################

function maali_build {
  # this is the core function for creating software

  # allows late evaluation
  MAALI_TOOL_CONFIGURE_EVAL=`eval echo "$MAALI_TOOL_CONFIGURE"`
  cd "$MAALI_TOOL_BUILD_DIR"

  if [ $MAALI_TOOL_MAJOR_VERSION -gt 1 ]; then
    MAALI_TOOL_CONFIGURE_EVAL="-enable-static --disable-shared"
    export LDFLAGS="-lpthread -all-static"
    export AM_CPPFLAGS="-Wall -Wnon-virtual-dtor -I\"`pwd`\"/include"
  fi
 
  maali_run "./configure --prefix=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE_EVAL"
  maali_run "make"
  maali_run "make install"

}

##############################################################################
