##############################################################################
# maali cygnet file for libcircle
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

libcircle is an ANSI C library providing an implementation of a distributed
queue (a circle queue). The implementation uses the message passing interface
(MPI).

For further information see http://hpc.github.io/libcircle/

EOF

# specify which PrgEnv we want to build the tool with
MAALI_TOOL_CRAY_PRGENV="$MAALI_DEFAULT_CRAY_GCC_PRGENV"

# specify which cpus to target
MAALI_TOOL_CRAY_CPU_TARGET="$MAALI_DEFAULT_CRAY_PES"

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from, and to...
MAALI_URL="https://github.com/hpc/libcircle/tarball/master"

# patch files to download
MAALI_TOOL_PATCHES="001"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/libcircle-v${MAALI_TOOL_VERSION}.tar.gz"

# where the unpacked source code
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/libcircle-v${MAALI_TOOL_VERSION}"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# tool pre-requisites
MAALI_TOOL_PREREQ="$MAALI_DEFAULT_MPI"

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_PKG_CONFIG_PATH=1

# create the directory before untarring
MAALI_UNPACK_MKDIR=1

read -r -d '' MAALI_MODULE_WHATIS << EOF

libcircle is an ANSI C library providing an implementation of a distributed
queue (a circle queue). The implementation uses the message passing interface
(MPI). 

For further information see, e.g., http://hpc.github.io/libcircle/

EOF

##############################################################################
#
#  Unfortunately, the configure script for libcircle is, well, not very
#  configurable. There are two main problems:
#
#  1. assumption of gcc compiler options
#  2. assumption of OpenMPI-like mpicc compiler options
#
#  The first is overcome simply by using GCC; the second requires a
#  patch to the configure script. To do this I removed the offending
#  configuration code (mainly related to MPICC) and created the
#  relevant  patch file.
#
#  This is /ivec/cle52/magnus/src/libcircle-v0.2.1.patch 
#  i.e., in ($IVEC_SRC for magnus)
#
#  If the version of libcircle is changed, the patch file may have
#  to be re-created.
#
###############################################################################

function maali_build {

    cd "$MAALI_TOOL_BUILD_DIR"
    cd hpc-libcircle-*
    mv * ..
    cd ..
    rmdir hpc-libcircle-*

    patch configure < "$MAALI_FILES_PATH/$MAALI_TOOL_NAME.001.patch"

    maali_run "./configure --prefix $MAALI_INSTALL_DIR CC=cc MPICC=cc"
    maali_run "make"
    maali_run "make install"

}

###############################################################################
