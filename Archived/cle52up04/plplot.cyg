##############################################################################
# maali cygnet file for plplot
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

PLplot is a cross-platform software package for creating scientific plots whose
(UTF-8) plot symbols and text are limited in practice only by what
Unicode-aware system fonts are installed on a user's computer. The PLplot
software, which is primarily licensed under the LGPL, has a clean architecture
that is organized as a core C library, separate language bindings for that
library, and separate device drivers that are dynamically loaded by the core
library which control how the plots are presented in noninteractive and
interactive plotting contexts.

For further information see http://plplot.sourceforge.net/

EOF

# specify which PrgEnv we want to build the tool with
MAALI_TOOL_CRAY_PRGENV="$MAALI_DEFAULT_CRAY_GCC_PRGENV"

# specify which cpus to target
MAALI_TOOL_CRAY_CPU_TARGET="$MAALI_DEFAULT_CRAY_PES"

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
MAALI_URL="http://downloads.sourceforge.net/project/$MAALI_TOOL_NAME/$MAALI_TOOL_NAME/$MAALI_TOOL_VERSION%20Source/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# tool build pre-requisites
MAALI_TOOL_BUILD_PREREQ="cmake/3.4.1"

# for auto-building module files
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_PKGCONFIG=1

##############################################################################

function maali_cmake_build {

  cd "$MAALI_TOOL_BUILD_DIR"
  mkdir build
  cd build

  export CRAYPE_LINK_TYPE=dynamic
  maali_run "cmake -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR -DCMAKE_Fortran_COMPILER=ftn .."
  maali_run "make"
  maali_run "make install"

}

##############################################################################
