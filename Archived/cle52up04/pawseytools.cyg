##############################################################################
# maali cygnet file for pawseytools
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

pawseytools contains a collection of useful utilities provided by Pawsey staff.

For further information see https://support.pawsey.org.au/documentation/display/US/Pawseytools

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="binary"

# URL to download the source code from - it's java
MAALI_URL="ssh://stapops@code.pawsey.org.au/code/stapops/pawseytools"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}.tar"

# where the unpacked source code is located - no source code for you
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="tools"

# tool pre-requisites
MAALI_TOOL_PREREQ=""

# for auto-building module files
MAALI_MODULE_SET_PATH=1

# determine the tag
MAALI_TOOL_TAG=`echo $MAALI_TOOL_VERSION | sed -e 's/\./_/g'`
MAALI_TOOL_TAG="r$MAALI_TOOL_TAG"

##############################################################################

function maali_download {
  
  maali_run "git archive --remote $MAALI_URL --format=tar --prefix=$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION/ -o $MAALI_DST $MAALI_TOOL_TAG"
}

##############################################################################

function maali_build {

  cd $MAALI_TOOL_BUILD_DIR

  maali_makedir "$MAALI_INSTALL_DIR/bin"

  for file in `ls scripts/*`
  do
    maali_run "install -m 755 $file $MAALI_INSTALL_DIR/bin/"
  done

  # version dependent
  sed -i -e 's/PAWSEY_TOOLS_VERSION/'$MAALI_TOOL_VERSION'/g' $MAALI_INSTALL_DIR/bin/startServer
}

###############################################################################
