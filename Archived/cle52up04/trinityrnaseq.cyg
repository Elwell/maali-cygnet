##############################################################################
# maali cygnet file for Trinity RNA-Seq Assembly
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

Trinity, developed at the Broad Institute and the [Hebrew University of
Jerusalem] (http://www.cs.huji.ac.il), represents a novel method for the
efficient and robust de novo reconstruction of transcriptomes from RNA-seq
data. Trinity combines three independent software modules: Inchworm, Chrysalis,
and Butterfly, applied sequentially to process large volumes of RNA-seq reads.
Trinity partitions the sequence data into many individual de Bruijn graphs,
each representing the transcriptional complexity at a given gene or locus, and
then processes each graph independently to extract full-length splicing
isoforms and to tease apart transcripts derived from paralogous genes.

For further information see Ahttps://github.com/trinityrnaseq/trinityrnaseq/wiki

EOF

# specify which PrgEnv we want to build the tool with
MAALI_TOOL_CRAY_PRGENV="$MAALI_DEFAULT_CRAY_GCC_PRGENV"

# specify which cpus to target
MAALI_TOOL_CRAY_CPU_TARGET="$MAALI_DEFAULT_CRAY_PES"

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
MAALI_URL="https://github.com/$MAALI_TOOL_NAME/$MAALI_TOOL_NAME/archive/v${MAALI_TOOL_VERSION}.tar.gz"

# patch files to download
MAALI_TOOL_PATCHES="001"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/v${MAALI_TOOL_VERSION}.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="bio-apps"

# tool pre-requisites
MAALI_TOOL_PREREQ="java/8u66 bowtie/1.1.1 samtools/0.1.19 jellyfish/2.2.0 fastool/0.1.4 parafly/2013-01-21"

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
MAALI_TOOL_BUILD_PREREQ=""

# for auto-building module files
MAALI_MODULE_SET_PATH="toplevel"

##############################################################################

function maali_build {
  cd $MAALI_TOOL_BUILD_DIR
  maali_run "cp Chrysalis/Makefile_icpc Chrysalis/Makefile_crayCC"
  maali_run "patch -p0 < $MAALI_FILES_PATH/$MAALI_TOOL_NAME.001.patch"
  maali_run "make TRINITY_COMPILER=intel"
  cd ./Inchworm/src
  maali_run "make -f MPI_cray.Makefile" 
  maali_run "/usr/bin/install -c ./MPIinchworm -D ../bin/MPIinchworm"
  cd ../../
  cd trinity-plugins
  maali_run "make trimmomatic_target"
  cd ..
  maali_run "mv * $MAALI_INSTALL_DIR/"
}

##############################################################################
