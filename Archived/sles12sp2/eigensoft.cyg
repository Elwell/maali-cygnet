##############################################################################
# maali cygnet file for EIGENSOFT
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

For further information see https://github.com/DReichLab/EIG/

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
MAALI_URL="https://github.com/DReichLab/EIG/archive/v${MAALI_TOOL_VERSION}.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/EIG-$MAALI_TOOL_VERSION"

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
MAALI_TOOL_BUILD_PREREQ="gsl/2.3 intel-mkl/2017.0.3"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="bio-apps"

# for auto-building module files
MAALI_MODULE_SET_PATH=1

##############################################################################

function maali_build {
  cd "$MAALI_TOOL_BUILD_DIR"
  cd src

  export LDFLAGS="-L$MAALI_GSL_HOME/lib"
  sed -i -e "s;-lopenblas;-L$MKLROOT/lib/intel64 -Wl,--no-as-needed -lmkl_intel_ilp64 -lmkl_sequential -lmkl_core;g" Makefile
  sed -i -e "s;/usr/include/openblas;$MKLROOT/include;g" Makefile
  sed -i -e "s;<lapacke.h>;<mkl_lapacke.h>;g" ksrc/kjg_gsl.c

  maali_run "make"
  maali_run "make install"
}

##############################################################################
