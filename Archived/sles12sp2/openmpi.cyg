##############################################################################
# maali cygnet file for mpich
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

OpenMPI is an open source Message Passing Interface implementation that is developed and
maintained by a consrtium of academic, research and industry partners. 

For further information see https://www.openmpi.org

EOF

# specify which compilers we want to build the tool with. We specify only compiler that work with CUDA build
MAALI_TOOL_COMPILERS="gcc/5.4.0 intel/17.0.4"

# specify the architectures we want to build the library on.  Only the broadwell nodes have GPUs currently at Pawsey
MAALI_TOOL_CPU_TARGET="broadwell"

# URL to download the source code from
MAALI_URL="http://www.openmpi.org/software/ompi/v$MAALI_TOOL_MAJOR_MINOR_VERSION/downloads/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.bz2"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.bz2"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# tool pre-requisites modules needed to install this new tool/package
# Set this to the latest CUDA SDK installed on Athena
MAALI_TOOL_PREREQ="cuda/8.0.61"

# add additional configure options
MAALI_TOOL_CONFIGURE='--with-pmi=/usr --with-lustre=/usr --with-cuda=${MAALI_CUDA_HOME}'

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_CPATH=1
MAALI_MODULE_SET_MANPATH=1

##############################################################################

function maali_build {
  # this is the core function for creating software

  # allows late evaluation
  MAALI_TOOL_CONFIGURE_EVAL=`eval echo "$MAALI_TOOL_CONFIGURE"`

 #  unset F90

  cd "$MAALI_TOOL_BUILD_DIR"
  maali_run "./configure --prefix=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE_EVAL"
  maali_run "make -j8 all"
  maali_run "make install"
}

##############################################################################
