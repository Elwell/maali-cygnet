##############################################################################
# maali cygnet file for gromacs
##############################################################################

# specify which PrgEnv we want to build the tool with
MAALI_TOOL_CRAY_PRGENV="$MAALI_DEFAULT_CRAY_GCC_PRGENV $MAALI_DEFAULT_CRAY_INTEL_PRGENV"

# specify which cpus to target
MAALI_TOOL_CRAY_CPU_TARGET="$MAALI_DEFAULT_CRAY_PES"

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
MAALI_URL="ftp://ftp.gromacs.org/pub/gromacs/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="apps"

# tool pre-requisites
MAALI_TOOL_PREREQ="fftw/3.3.4.3 cray-mpich/7.2.2 craype-network-aries libxml2 boost"

# add additional configure options
if [ $MAALI_TOOL_VERSION == 3.3.3 ]; then
  MAALI_TOOL_CONFIGURE='--with-fft=fftw3 --with-external-blas --with-external-lapack --host=x86_64'
elif [ $MAALI_TOOL_VERSION == 4.0.7 ]; then
  MAALI_TOOL_CONFIGURE='--with-fft=fftw3 --with-external-blas --with-external-lapack --host=x86_64'
else
  MAALI_TOOL_CONFIGURE=' -DFFTWF_INCLUDE_DIR=$FFTW_INC -DFFTW3_LIBRARIES=$FFTW_DIR -DFFTW3F_INCLUDE_DIR=$FFTW_INC -DFFTW3_INCLUDE_DIR=$FFTW_INC -DGMX_FFT_LIBRARY=fftw3 -DGMX_PREFER_STATIC_LIBS=ON -DCMAKE_SKIP_RPATH=ON --host=x86_64 -DCMAKE_C_SIZEOF_DATA_PTR=8 -DGMX_BUILD_UNITTESTS=OFF -DGMX_CPU_ACCELERATION=SSE4.1'
# -DGMX_CPU_ACCELERATION=AVX_256'
fi

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
if [ $MAALI_TOOL_VERSION == 3.3.3 ]; then
  MAALI_TOOL_BUILD_PREREQ=""
elif [ $MAALI_TOOL_VERSION == 4.0.7 ]; then
  MAALI_TOOL_BUILD_PREREQ=""
else
  MAALI_TOOL_BUILD_PREREQ="cmake"
fi

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_MANPATH=1
MAALI_MODULE_WHATIS='GROMACS is a versatile package to perform molecular dynamics, i.e. simulate the Newtonian equations of motion for systems with hundreds to millions of particles.'
MAALI_MODULE_SET_GMXLIB='$MAALI_APP_HOME/share/gromacs/top'
MAALI_MODULE_SET_GMXBIN='$MAALI_APP_HOME/bin'
MAALI_MODULE_SET_GMXDATA='$MAALI_APP_HOME/share'
MAALI_MODULE_SET_GMXMAN='$MAALI_APP_HOME/share/man'
if [ $MAALI_TOOL_MAJOR_VERSION == 3 ]; then
  MAALI_MODULE_SET_GMXDLIB='$MAALI_APP_HOME/lib'
elif [ $MAALI_TOOL_MAJOR_VERSION == 4 ]; then
  MAALI_MODULE_SET_GMXDLIB='$MAALI_APP_HOME/lib'
elif [ $MAALI_TOOL_MAJOR_VERSION == 5 ]; then
  MAALI_MODULE_SET_GMXDLIB='$MAALI_APP_HOME/lib64'
fi

##############################################################################

function maali_build {
    # this is the core function for creating software

    # allows late evaluation
    MAALI_TOOL_CONFIGURE_EVAL=`eval echo "$MAALI_TOOL_CONFIGURE"`

    cd "$MAALI_TOOL_BUILD_DIR"

    #Normal single precision
    maali_run "./configure --prefix=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE_EVAL"
    maali_run "make clean"
    maali_run "make"
    maali_run "make install"

    #single precision / mpi
    maali_run "./configure --prefix=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE_EVAL --program-suffix=_mpi --enable-mpi"
    maali_run "make clean"
    maali_run "make mdrun"
    maali_run "make install-mdrun"

    #Normal double precision
    maali_run "./configure --prefix=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE_EVAL --program-suffix=_d --enable-double"
    maali_run "make clean"
    maali_run "make"
    maali_run "make install"

    #double precision / mpi
    maali_run "./configure --prefix=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE_EVAL --program-suffix=_mpi_d --enable-mpi --enable-double"
    maali_run "make clean"
    maali_run "make mdrun"
    maali_run "make install-mdrun"

}

##############################################################################

function maali_cmake_build {
  # for tools that use cmake

  # allows late evaluation
  MAALI_TOOL_CONFIGURE_EVAL=`eval echo "$MAALI_TOOL_CONFIGURE"`

  # Work around Cray not setting up pkg-config for user applications.
  target="PE_FFTW_TARGET_${CRAY_CPU_TARGET}"
  CRAY_FFTW_PKGCONFIG_PATH=${PE_FFTW_VOLATILE_PKGCONFIG_PATH/@PE_FFTW_TARGET@/${!target}}
  export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${CRAY_FFTW_PKGCONFIG_PATH}

  # maali defaults to dynamic
  unset CRAYPE_LINK_TYPE

  # cmake likes to build in a directory of it's own.  single-precision, no MPI
  maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build"
  cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build"

  maali_run "cmake -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH"
  if [ $DEBUG ]; then
    maali_run "make VERBOSE=TRUE"
  else
    maali_run "make"
  fi
  maali_run "make install"

  # cmake likes to build in a directory of it's own.  single-precision, MPI
  maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build-mpi"
  cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build-mpi"

  maali_run "cmake -DGMX_MPI=ON -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH"
  if [ $DEBUG ]; then
    maali_run "make VERBOSE=TRUE"
  else
    maali_run "make"
  fi
  maali_run "make install"

  # cmake likes to build in a directory of it's own. double-precision, no MPI
  maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-double"
  cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-double"

  maali_run "cmake -DGMX_DOUBLE=ON -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH"
  if [ $DEBUG ]; then
    maali_run "make VERBOSE=TRUE"
  else
    maali_run "make"
  fi
  maali_run "make install"

  # cmake likes to build in a directory of it's own. double-precision, MPI
  maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-double-mpi"
  cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-double-mpi"

  maali_run "cmake -DGMX_MPI=ON -DGMX_DOUBLE=ON -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH"
  if [ $DEBUG ]; then
    maali_run "make VERBOSE=TRUE"
  else
    maali_run "make"
  fi
  maali_run "make install"

}

##############################################################################
