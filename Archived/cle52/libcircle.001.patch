--- ./configure	2014-09-18 14:07:49.000000000 +0800
+++ ../../libcicle-v0.2.1/configure	2015-04-29 17:04:17.000000000 +0800
@@ -12704,10 +12704,10 @@
      # and link lines.  After this part of the macro, we'll have a valid
      # lx_mpi_command_line
      echo -n "Checking whether $MPICC responds to '-showme:compile'... "
-     lx_mpi_compile_line=`$MPICC -showme:compile 2>/dev/null`
+     lx_mpi_compile_line=`$MPICC  -V 2>/dev/null`
      if [ "$?" -eq 0 ]; then
-         echo yes
-         lx_mpi_link_line=`$MPICC -showme:link 2>/dev/null`
+         echo yesks 
+         lx_mpi_link_line=`$MPICC`
      else
          echo no
          echo -n "Checking whether $MPICC responds to '-showme'... "
@@ -12737,21 +12737,22 @@
      if [ ! -z "$lx_mpi_compile_line" -a ! -z "$lx_mpi_link_line" ]; then
          lx_mpi_command_line="$lx_mpi_compile_line $lx_mpi_link_line"
      fi
+     lx_mpi_command_line='$MPICC'
 
      if [ ! -z "$lx_mpi_command_line" ]; then
          # Now extract the different parts of the MPI command line.  Do these separately in case we need to
          # parse them all out in future versions of this macro.
-         lx_mpi_defines=`    echo "$lx_mpi_command_line" | grep -o -- '\(^\| \)-D\([^\"[:space:]]\+\|\"[^\"[:space:]]\+\"\)'`
-         lx_mpi_includes=`   echo "$lx_mpi_command_line" | grep -o -- '\(^\| \)-I\([^\"[:space:]]\+\|\"[^\"[:space:]]\+\"\)'`
-         lx_mpi_link_paths=` echo "$lx_mpi_command_line" | grep -o -- '\(^\| \)-L\([^\"[:space:]]\+\|\"[^\"[:space:]]\+\"\)'`
-         lx_mpi_libs=`       echo "$lx_mpi_command_line" | grep -o -- '\(^\| \)-l\([^\"[:space:]]\+\|\"[^\"[:space:]]\+\"\)'`
-         lx_mpi_link_args=`  echo "$lx_mpi_command_line" | grep -o -- '\(^\| \)-Wl,\([^\"[:space:]]\+\|\"[^\"[:space:]]\+\"\)'`
+#         lx_mpi_defines=`    echo "$lx_mpi_command_line" | grep -o -- '\(^\| \)-D\([^\"[:space:]]\+\|\"[^\"[:space:]]\+\"\)'`
+#         lx_mpi_includes=`   echo "$lx_mpi_command_line" | grep -o -- '\(^\| \)-I\([^\"[:space:]]\+\|\"[^\"[:space:]]\+\"\)'`
+#         lx_mpi_link_paths=` echo "$lx_mpi_command_line" | grep -o -- '\(^\| \)-L\([^\"[:space:]]\+\|\"[^\"[:space:]]\+\"\)'`
+#         lx_mpi_libs=`       echo "$lx_mpi_command_line" | grep -o -- '\(^\| \)-l\([^\"[:space:]]\+\|\"[^\"[:space:]]\+\"\)'`
+#         lx_mpi_link_args=`  echo "$lx_mpi_command_line" | grep -o -- '\(^\| \)-Wl,\([^\"[:space:]]\+\|\"[^\"[:space:]]\+\"\)'`
 
          # Create variables and clean up newlines and multiple spaces
-         MPI_CFLAGS="$lx_mpi_defines $lx_mpi_includes"
-         MPI_CLDFLAGS="$lx_mpi_link_paths $lx_mpi_libs $lx_mpi_link_args"
-         MPI_CFLAGS=`  echo "$MPI_CFLAGS"   | tr '\n' ' ' | sed 's/^[ \t]*//;s/[ \t]*$//' | sed 's/  +/ /g'`
-         MPI_CLDFLAGS=`echo "$MPI_CLDFLAGS" | tr '\n' ' ' | sed 's/^[ \t]*//;s/[ \t]*$//' | sed 's/  +/ /g'`
+#         MPI_CFLAGS="$lx_mpi_defines $lx_mpi_includes"
+#         MPI_CLDFLAGS="$lx_mpi_link_paths $lx_mpi_libs $lx_mpi_link_args"
+#         MPI_CFLAGS=`  echo "$MPI_CFLAGS"   | tr '\n' ' ' | sed 's/^[ \t]*//;s/[ \t]*$//' | sed 's/  +/ /g'`
+#         MPI_CLDFLAGS=`echo "$MPI_CLDFLAGS" | tr '\n' ' ' | sed 's/^[ \t]*//;s/[ \t]*$//' | sed 's/  +/ /g'`
 
          OLD_CPPFLAGS=$CPPFLAGS
          OLD_LIBS=$LIBS
