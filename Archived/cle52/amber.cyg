##############################################################################
# maali cygnet file for Amber
##############################################################################

# specify which PrgEnv we want to build the tool with
MAALI_TOOL_CRAY_PRGENV="$MAALI_DEFAULT_CRAY_INTEL_PRGENV"

# specify which cpus to target
MAALI_TOOL_CRAY_CPU_TARGET="$MAALI_DEFAULT_CRAY_PES"

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
MAALI_URL=""

# location we are downloading the source code to
if [ $MAALI_TOOL_VERSION == "12" ]; then
  MAALI_DST="$MAALI_SRC/Amber$MAALI_TOOL_VERSION.tar.bz2 $MAALI_SRC/AmberTools13.tar.bz2"
elif [ $MAALI_TOOL_VERSION == "14" ]; then
  MAALI_DST="$MAALI_SRC/Amber$MAALI_TOOL_VERSION.tar.bz2 $MAALI_SRC/AmberTools14.tar.bz2"
fi

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/amber$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="apps"

# tool pre-requisites
MAALI_TOOL_PREREQ="netcdf python"

# add additional configure options
MAALI_TOOL_CONFIGURE='-noX11 -crayxt5 -nomtkpp --with-netcdf $NETCDF_DIR intel'

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_AMBERHOME='$MAALI_APP_HOME'
MAALI_MODULE_RESTRICT_GROUP=amber

##############################################################################

function maali_build {
  export AMBERHOME=$MAALI_BUILD_DIR/amber$MAALI_TOOL_VERSION

  # allows late evaluation
  MAALI_TOOL_CONFIGURE_EVAL=`eval echo "$MAALI_TOOL_CONFIGURE"`

  if [ "$MAALI_COMPILER_NAME" == "PrgEnv-intel" ]; then
    export MKL_HOME=$MKLROOT
    export AMBERBUILDFLAGS="-I${MKLROOT}/include/fftw"
  fi

  # Bypass the normal configure script, which does an update and then calls configure2.
  # Run twice so can patch itself.
  cd "$MAALI_TOOL_BUILD_DIR"
  maali_run "echo y | ./update_amber --update"

  # Serial
  maali_run "./configure $MAALI_TOOL_CONFIGURE_EVAL"
  maali_run "make -e"
  maali_run "make -j$MAALI_CORES -e install"

  # Parallel
  maali_run "./configure -mpi $MAALI_TOOL_CONFIGURE_EVAL"
  maali_run "make -e"
  maali_run "make -j$MAALI_CORES -e install"

  maali_run "mv * $MAALI_INSTALL_DIR/"
  maali_run "chmod 750 $MAALI_INSTALL_DIR"
  maali_run "chgrp -R amber $MAALI_INSTALL_DIR"
}

##############################################################################
