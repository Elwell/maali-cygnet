##############################################################################
# maali cygnet file for gerris  
##############################################################################

# specify which PrgEnv we want to build the tool with
MAALI_TOOL_CRAY_PRGENV="$MAALI_DEFAULT_CRAY_GCC_PRGENV $MAALI_DEFAULT_CRAY_INTEL_PRGENV"

# specify which cpus to target
MAALI_TOOL_CRAY_CPU_TARGET="$MAALI_DEFAULT_CRAY_PES"

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
MAALI_URL="http://gerris.dalembert.upmc.fr/gerris/$MAALI_TOOL_NAME-snapshot.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-snapshot.tar.gz"

# tool pre-requisites modules needed to install this new tool/package
MAALI_TOOL_PREREQ="cray-mpich/7.2.2 craype-network-aries fftw cray-netcdf gsl gts cray-mpich/7.2.2 craype-network-aries glib cray-tpsl"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-snapshot-$MAALI_TOOL_VERSION"

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_CPATH=1
MAALI_MODULE_SET_MANPATH=1
MAALI_MODULE_SET_PKG_CONFIG_PATH=1
MAALI_MODULE_WHATIS="Gerris is a Free Software program for the solution of the partial differential equations describing fluid flow."
                                                                                                                                                                 64,1          Bot
##############################################################################

function maali_build {
# add additional configure options
  if [ "$MAALI_COMPILER_NAME" == "intel" ]; then
    MAALI_TOOL_CONFIGURE='--host=x86_64-unknown-linux-gnu --disable-gsltest --enable-mpi --with-pic --with-mpicc=$MAALI_TOOL_BUILD_DIR/mpicc CC=cc CXX=CC CFLAGS=-openmp LDFLAGS=-dynamic'
  elif [ "$MAALI_COMPILER_NAME" == "gcc" ]; then
    MAALI_TOOL_CONFIGURE='--host=x86_64-unknown-linux-gnu --disable-gsltest --enable-mpi --with-pic --with-mpicc=$MAALI_TOOL_BUILD_DIR/mpicc CC=cc CXX=CC CFLAGS=-fopenmp LDFLAGS=-dynamic'
  fi

  # Work around Cray not setting up pkg-config for user applications.
  target="PE_FFTW_TARGET_${CRAY_CPU_TARGET}"
  CRAY_FFTW_PKGCONFIG_PATH=${PE_FFTW_VOLATILE_PKGCONFIG_PATH/@PE_FFTW_TARGET@/${!target}}
  export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${CRAY_FFTW_PKGCONFIG_PATH}

  # allows late evaluation
  MAALI_TOOL_CONFIGURE_EVAL=`eval echo "$MAALI_TOOL_CONFIGURE"`

  # Make a wrapper called mpicc, because that's how they check for MPI.
  cd "$MAALI_TOOL_BUILD_DIR"
cat <<EOF > mpicc
#!/bin/bash
cc \$@
EOF
chmod +x mpicc
  maali_run "./configure --prefix=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE_EVAL"

  maali_run 'sed -i -e "s/--mode=link \$(CC)/--mode=link \$(CC) -dynamic/gi" doc/examples/Makefile'
  maali_run 'sed -i -e "s/--mode=link \$(CC)/--mode=link \$(CC) -dynamic/gi" doc/Makefile'

  maali_run 'make'
  maali_run "make install"
}

##############################################################################
