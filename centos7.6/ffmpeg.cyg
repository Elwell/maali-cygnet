##############################################################################
# maali cygnet file for FFMPEG 
##############################################################################

# Package description

read -r -d '' MAALI_MODULE_WHATIS << EOF
FFmpeg is the leading multimedia framework, able to decode, encode, transcode, mux, demux, stream, filter and play pretty much anything that humans and machines have created. It supports the most obscure ancient formats up to the cutting edge. No matter if they were designed by some standards committee, the community or a corporation. It is also highly portable: FFmpeg compiles, runs, and passes our testing infrastructure FATE across Linux, Mac OS X, Microsoft Windows, the BSDs, Solaris, etc. under a wide variety of build environments, machine architectures, and configurations. 
EOF


# Compiler and target CPU architecture
# intel compiler is not supported
MAALI_TOOL_COMPILERS="pgi/19.7 gcc/4.8.5 gcc/7.2.0 gcc/8.3.0"
MAALI_TOOL_CPU_TARGET="cascadelake broadwell"

# URL to download source
MAALI_URL="https://ffmpeg.org/releases/ffmpeg-$MAALI_TOOL_VERSION.tar.bz2"
# Local filename for downloaded source file
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.bz2"
# Directory obtained when unzipping source file (name must match the actual content of the source file)
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME_ORIG-$MAALI_TOOL_VERSION"

# Runtime module dependencies
MAALI_TOOL_PREREQ="cuda/10.2"
# Build-only module dependencies
MAALI_TOOL_BUILD_PREREQ="cmake/3.15.0 cuda/10.2"

# Type of tool
MAALI_TOOL_TYPE="devel"

# Variables to be defined in the modulefile
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LIBRARY_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_MANPATH=1
MAALI_MODULE_SET_PKG_CONFIG_PATH=1

##############################################################################
# Functions to be redefined

function maali_cmake_build {
    maali_run "mkdir -p $MAALI_INSTALL_DIR"
    maali_run "./configure --prefix=$MAALI_INSTALL_DIR --enable-cuda-nvcc --enable-nonfree"
    maali_run "make -j $MAALI_CORES"
    maali_run "make -j $MAALI_CORES install" 
}

##############################################################################
