##############################################################################
# maali cygnet file for VMD
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

VMD is a molecular visualization program for displaying, animating, and
analyzing large biomolecular systems using 3-D graphics and built-in scripting.

For further information see http://www.ks.uiuc.edu/Research/vmd/

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_GCC_COMPILERS"
MAALI_TOOL_CPU_TARGET="cascadelake broadwell"
MAALI_TOOL_MPI_COMPILERS="$MAALI_DEFAULT_MPI_COMPILERS"

# URL to download the source code from (requires registration)
MAALI_URL=""

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME_ORIG-$MAALI_TOOL_VERSION.src.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="apps"

## tool pre-requisites
MAALI_TOOL_PREREQ="netcdf/4.5.0 fltk/1.3.5 tcltk/8.6.10"

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
MAALI_TOOL_BUILD_PREREQ=""

# add additional configure options
MAALI_TOOL_CONFIGURE=''

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_VMDNOMPI=1

##############################################################################

function maali_build {

  cd "$MAALI_TOOL_BUILD_DIR"
  maali_run "mv ../plugins ."

  # compile plugins
  cd plugins
  temp_arch="LINUXAMD64"
  export TCLINC="-I${MAALI_TCLTK_HOME}/include"
  export TCLLIB="-L${MAALI_TCLTK_HOME}/lib"
  export PLUGINDIR="${MAALI_INSTALL_DIR}/lib/plugins"
  maali_run "sed -i -e 's;-ltcl8.5;-ltcl8.6;g' Make-arch"

  maali_run "make $temp_arch"
  maali_run "make distrib"
  cd ..

  # compile VMD
  export VMDINSTALLBINDIR="${MAALI_INSTALL_DIR}/bin"
  export VMDINSTALLLIBRARYDIR="${MAALI_INSTALL_DIR}/lib"
  if [ "$MAALI_CPU_TARGET" == "cascadelake" ] ; then
    maali_run "./configure LINUXAMD64 OPENGL OPENGLPBUFFER FLTK TK XINPUT XINERAMA LIBPNG NETCDF COLVARS TCL PTHREADS SILENT GCC MPI IMD AVX512"
  else
    maali_run "./configure LINUXAMD64 OPENGL OPENGLPBUFFER FLTK TK XINPUT XINERAMA LIBPNG NETCDF COLVARS TCL PTHREADS SILENT GCC MPI IMD"
  fi
  # cat configure.options

  cd src
  maali_run "sed -i -e 's;/usr/local/bin/gzip;gzip;g' Makefile"
  maali_run "sed -i -e 's;-ltcl8.5;-ltcl8.6;g' Makefile"
  maali_run "sed -i -e 's;-ltk8.5;-ltk8.6;g' Makefile"
  maali_run "sed -i -e 's; -ll;;g' Makefile"
  sed -i -e "s;../plugins/$temp_arch/molfile;../plugins/compile/lib_$temp_arch/molfile;g" Makefile
  maali_run "sed -i -e '/^CC.*=/ s;gcc;mpicc;g' Makefile"
  maali_run "sed -i -e '/^CCPP.*=/ s;g++;mpic++;g' Makefile"
  maali_run "sed -i -e 's;-lmpich;-lmpi;g' Makefile"

  maali_run "make"
  maali_run "make install"

}

##############################################################################
