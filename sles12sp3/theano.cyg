##############################################################################
# maali cygnet file for Theano 
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

Theano is a Python library that lets you to define, optimize, and evaluate mathematical 
expressions, especially ones with multi-dimensional arrays (numpy.ndarray). Using 
Theano it is possible to attain speeds rivaling hand-crafted C implementations for 
problems involving large amounts of data.

Theano is set by default to use 1 GPU only. 

For further information see http://deeplearning.net/software/theano/index.html 

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_PYTHON"

# Build the package only for the compute nodes
MAALI_TOOL_CPU_TARGET="broadwell"

MAALI_TOOL_CUDA_COMPILERS="$MAALI_DEFAULT_CUDA_COMPILERS"

# There is nothing to download
MAALI_URL="https://github.com/$MAALI_TOOL_NAME/$MAALI_TOOL_NAME/archive/rel-$MAALI_TOOL_VERSION.tar.gz"
MAALI_DST="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# Load the prerequisite Python packages, CUDA SDK and GCC compiler
MAALI_TOOL_PREREQ="broadwell gcc/5.5.0 numpy scipy cython setuptools pip wheel six nose libgpuarray"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME_ORIG-$MAALI_TOOL_VERSION"

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_CPATH=1
MAALI_MODULE_SET_PYTHONPATH=1

if [ $MAALI_CUDA_BUILD -eq 1 ]; then
MAALI_MODULE_SET_THEANO_FLAGS='cuda.root=\$env\(MAALI_CUDA_HOME\),device=cuda,floatX=float32'
fi

MAALI_UNPACK_MKDIR=1
MAALI_TAR_EXTRA=--strip-components=1

