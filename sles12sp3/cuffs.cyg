##############################################################################
# maali cygnet file for cuFFS 
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

CUDA-accelerated Fast Faraday Synthesis code.

For further information see https://github.com/sarrvesh/cuFFS

EOF

# specify which compilers we want to build the tool with. We specify only compilers that work with CUDA build
MAALI_TOOL_COMPILERS="gcc/5.5.0"

# specify te CPU types to be built for
MAALI_TOOL_CPU_TARGET="sandybridge broadwell"

MAALI_TOOL_CUDA_COMPILERS="$MAALI_DEFAULT_CUDA_COMPILERS"

# URL to download the source code from
MAALI_URL="https://github.com/sarrvesh/cuFFS/archive/v$MAALI_TOOL_MAJOR_MINOR_VERSION.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/cuFFS-$MAALI_TOOL_MAJOR_MINOR_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/cuFFS-$MAALI_TOOL_MAJOR_MINOR_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# tool pre-requisites modules needed to install this new tool/package
MAALI_TOOL_PREREQ="cfitsio libconfig hdf5"

# add additional configure options
MAALI_TOOL_CONFIGURE=""

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_PKG_CONFIG_PATH=1
MAALI_MODULE_SET_CPATH=1
MAALI_MODULE_SET_MANPATH=1

MAALI_CMAKE_TOOL=1

function maali_pre_build {
  export CFITSIO=$CFITSIO_ROOT
}

# Removed "make install" from cmake build, as cuFFS<=0.5.0 doesn't have it
function maali_cmake_build {
  # for tools that use cmake

  # allows late evaluation
  MAALI_TOOL_CONFIGURE_EVAL=`eval echo "$MAALI_TOOL_CONFIGURE"`

  # cmake likes to build in a director of it's own
  maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build"
  cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build"

  maali_run "cmake -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH"
  if [ $DEBUG ]; then
    maali_run "make -j $MAALI_CORES VERBOSE=TRUE"
  else
    maali_run "make -j $MAALI_CORES"
  fi
}

function maali_post_build {
  cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build"
  maali_run "mkdir -p $MAALI_INSTALL_DIR/bin"
  maali_run "install -m 755 rmsynthesis $MAALI_INSTALL_DIR/bin/"
  maali_run "install -m 755 fitsrotate $MAALI_INSTALL_DIR/bin/"
}

