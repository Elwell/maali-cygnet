##############################################################################
# maali cygnet file for VASP
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

The Vienna Ab initio Simulation Package (VASP) is a computer program for atomic
scale materials modelling, e.g. electronic structure calculations and
quantum-mechanical molecular dynamics, from first principles.

For further information see https://www.vasp.at/

EOF

# specify which PrgEnv we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_INTEL_COMPILERS"
MAALI_TOOL_CPU_TARGET="broadwell"

# specify which cuda versions we want to build the tool with
MAALI_TOOL_CUDA_COMPILERS="cuda/9.2"

# URL to download the source code from
MAALI_URL=""

# Be sure to put the patches into the tarball rather than using maali.
# The directory name within the tarball should be vasp.$MAALI_TOOL_MAJOR_MINOR_VERSION.  E.g. vasp.5.3 and not vasp.5.3.5.
# Location of the source code.
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME.$MAALI_TOOL_VERSION.tar.gz"

# put a string here to help identify the patch level.
VASP_VERSION='5.4.4.18Apr17'

# where the unpacked source code is located
#if [ $MAALI_TOOL_VERSION \< 5.4.4 ]; then
#MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME.$MAALI_TOOL_MAJOR_MINOR_VERSION"
#else
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME.$MAALI_TOOL_VERSION"
#fi

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="apps"

# tool pre-requisites
MAALI_TOOL_PREREQ="intel-mpi"

# for auto-building module files
MAALI_MODULE_SET_PATH=1

# restrict the module to a specified group
MAALI_MODULE_RESTRICT_GROUP='vasp'

##############################################################################

function maali_build {

  cd "$MAALI_TOOL_BUILD_DIR"
  maali_run "mkdir -p $MAALI_INSTALL_DIR/bin"
  cp arch/makefile.include.linux_intel makefile.include  

  if [ $MAALI_TOOL_VERSION \< 5.4.4 ]; then
   maali_die "This Maali config file supports VASP versions >=5.4.4"
  fi

  sed -i -e "s/-openmp/-qopenmp/g" makefile.include

  if [ $MAALI_CUDA_BUILD -eq 1 ]; then
    sed -i -e "s/\/usr\/local\/cuda\//\$(MAALI\_CUDA\_HOME)/g" makefile.include     
    sed -i -e "s/-lcudart -lcuda -lcufft -lcublas/-lcudart -lcufft -lcublas/g" makefile.include
    maali_run "make veryclean"
    maali_run "make gpu"
    maali_run "make gpu_ncl"
    maali_run "install -m 750 -g vasp bin/vasp_gpu $MAALI_INSTALL_DIR/bin"
    maali_run "install -m 750 -g vasp bin/vasp_gpu_ncl $MAALI_INSTALL_DIR/bin"
  else 
    maali_run "make veryclean"
    maali_run "make all" 
    maali_run "install -m 750 -g vasp bin/vasp_gam $MAALI_INSTALL_DIR/bin"
    maali_run "install -m 750 -g vasp bin/vasp_ncl $MAALI_INSTALL_DIR/bin"
    maali_run "install -m 750 -g vasp bin/vasp_std $MAALI_INSTALL_DIR/bin"
  fi

  ##################################################
  # This would be a great place to compile additional VASP binaries with customisations.


  ##################################################
  # if this is a system build we need to restrict it to the appropriate group
  if [ "$MAALI_SYSTEM_BUILD" == "YES" ]; then
    maali_run "chmod 750 $MAALI_INSTALL_DIR"
    maali_run "chgrp $MAALI_MODULE_RESTRICT_GROUP $MAALI_INSTALL_DIR"

    maali_run "chmod 750 $MAALI_INSTALL_DIR/bin"
    maali_run "chgrp -R $MAALI_MODULE_RESTRICT_GROUP $MAALI_INSTALL_DIR/bin"
  fi

}

##############################################################################
